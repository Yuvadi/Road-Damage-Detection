import os
import shutil
import random
from pathlib import Path
from tqdm import tqdm

def create_yolo_dataset_split(
    source_dir: str,
    output_dir: str,
    train_ratio: float = 0.7,
    val_ratio: float = 0.2,
    test_ratio: float = 0.1
):
    """
    Split dataset into train, validation and test sets for YOLO training.
    
    Args:
        source_dir: Source directory containing 'images' and 'labels' folders
        output_dir: Output directory for the split dataset
        train_ratio: Ratio of training data (default: 0.7)
        val_ratio: Ratio of validation data (default: 0.2)
        test_ratio: Ratio of test data (default: 0.1)
    """
    print("Preparing YOLO dataset split...")
    
    # Validate ratios
    if not math.isclose(train_ratio + val_ratio + test_ratio, 1.0):
        raise ValueError("Ratios must sum to 1")

    # Create directory structure
    splits = ['train', 'val', 'test']
    print("Creating directory structure...")
    for split in splits:
        for subdir in ['images', 'labels']:
            os.makedirs(os.path.join(output_dir, split, subdir), exist_ok=True)

    # Get list of all images
    image_dir = os.path.join(source_dir, 'images')
    label_dir = os.path.join(source_dir, 'labels')
    
    # Get all image files and their corresponding labels
    image_files = [f for f in os.listdir(image_dir) if f.endswith(('.jpg', '.jpeg', '.png'))]
    
    # Shuffle the dataset
    random.shuffle(image_files)
    
    # Calculate split indices
    total_files = len(image_files)
    train_end = int(total_files * train_ratio)
    val_end = int(total_files * (train_ratio + val_ratio))
    
    # Split the files
    splits_files = {
        'train': image_files[:train_end],
        'val': image_files[train_end:val_end],
        'test': image_files[val_end:]
    }
    
    # Copy files to their respective directories with progress bars
    for split, files in splits_files.items():
        print(f"\nProcessing {split} set...")
        progress_bar = tqdm(files, desc=f"Copying {split} files", unit='file')
        
        for img_file in progress_bar:
            # Get corresponding label file
            label_file = os.path.splitext(img_file)[0] + '.txt'
            
            # Source paths
            img_src = os.path.join(image_dir, img_file)
            label_src = os.path.join(label_dir, label_file)
            
            # Destination paths
            img_dst = os.path.join(output_dir, split, 'images', img_file)
            label_dst = os.path.join(output_dir, split, 'labels', label_file)
            
            # Copy files
            shutil.copy2(img_src, img_dst)
            if os.path.exists(label_src):
                shutil.copy2(label_src, label_dst)
            
            # Update progress bar description with current file
            progress_bar.set_postfix({'file': img_file})
    
    # Print statistics
    print(f"\nDataset split complete! ðŸŽ‰")
    print(f"Total images: {total_files}")
    for split, files in splits_files.items():
        print(f"{split} set: {len(files)} images ({len(files)/total_files*100:.1f}%)")
        
    # Print paths information
    print("\nOutput directories:")
    for split in splits:
        print(f"{split}: {os.path.join(output_dir, split)}")

if __name__ == "__main__":
    import math
    
    # Example usage
    source_directory = "dataset"  # Your source directory
    output_directory = "yolo_dataset"  # Where you want the split dataset
    
    create_yolo_dataset_split(
        source_dir=source_directory,
        output_dir=output_directory
    )